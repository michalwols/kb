"use strict";(self.webpackChunkkb=self.webpackChunkkb||[]).push([[9775],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,k=d["".concat(i,".").concat(m)]||d[m]||u[m]||l;return n?r.createElement(k,o(o({ref:t},c),{},{components:n})):r.createElement(k,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<l;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5344:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const l={},o="Kubernetes",s={unversionedId:"devops/kubernetes",id:"devops/kubernetes",title:"Kubernetes",description:"kubectl",source:"@site/docs/devops/02-kubernetes.md",sourceDirName:"devops",slug:"/devops/kubernetes",permalink:"/docs/devops/kubernetes",draft:!1,editUrl:"https://github.com/michalwols/kb/edit/master/docs/devops/02-kubernetes.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Docker",permalink:"/docs/devops/docker"},next:{title:"Terraform",permalink:"/docs/devops/terraform"}},i={},p=[{value:"kubectl",id:"kubectl",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"API Gateway",id:"api-gateway",level:2},{value:"Learning",id:"learning",level:2}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"kubernetes"},"Kubernetes"),(0,a.kt)("h2",{id:"kubectl"},"kubectl"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/reference/kubectl/cheatsheet/"},"Official K8s Cheat Sheet")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'alias k=kubectl\n\n\n# bash in pod\nk exec -it <pod-name> \u2014 /bin/bash\n\nk get all  # list all resources\n\nk get services  # List all services in the namespace\nk get pods \u2014all-namespaces  # List all pods in all namespaces\nk get pods -o wide  # List all pods in the namespace, with more details\nk get deployment my-dep  # List a particular deployment\n\nk describe nodes <node-name>\nk describe pods <pod-name>\n\nk delete -f ./pod.yaml  # Delete a pod using the type and name specified in pod.yaml\nk delete pod,service baz foo  # Delete pods and services with same names \u201cbaz\u201d and \u201cfoo\u201d\nk delete pods,services -l name=<Label>  # Delete pods and services with label name=myLabel\nk -n <namespace> delete po,svc \u2014all  # Delete all pods and services in namespace my-ns\n\n\n# Port Forwarding\nk port-forward deployments/labelname 8080:8080  # deployment\nk port-forward svc/labelname 8080:8080  # service\n\n\n# Explain\nk explain pod.spec\n\n# Editing\nk edit deployments/name\n\n# Controller Status\n> k get cs\nNAME                 STATUS    MESSAGE             ERROR\nscheduler            Healthy   ok\ncontroller-manager   Healthy   ok\netcd-0               Healthy   {"health":"true"}\n')),(0,a.kt)("h2",{id:"best-practices"},"Best Practices"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://learnk8s.io/production-best-practices"},"https://learnk8s.io/production-best-practices"))),(0,a.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://learnk8s.io/troubleshooting-deployments"},"https://learnk8s.io/troubleshooting-deployments"))),(0,a.kt)("h2",{id:"api-gateway"},"API Gateway"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://learnk8s.io/kubernetes-ingress-api-gateway"},"https://learnk8s.io/kubernetes-ingress-api-gateway")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.nginx.com/blog/microservices-march-protect-kubernetes-apis-with-rate-limiting/"},"https://www.nginx.com/blog/microservices-march-protect-kubernetes-apis-with-rate-limiting/"))),(0,a.kt)("h2",{id:"learning"},"Learning"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://learnk8s.io/archive"},"https://learnk8s.io/archive"))))}u.isMDXComponent=!0}}]);