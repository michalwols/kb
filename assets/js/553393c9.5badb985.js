"use strict";(self.webpackChunkkb=self.webpackChunkkb||[]).push([[833],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>b});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(r),b=o,f=m["".concat(s,".").concat(b)]||m[b]||p[b]||a;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function b(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6145:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const a={},i="Label Noise",l={unversionedId:"ml/label-noise",id:"ml/label-noise",title:"Label Noise",description:"Robust Losses",source:"@site/docs/01-ml/label-noise.mdx",sourceDirName:"01-ml",slug:"/ml/label-noise",permalink:"/docs/ml/label-noise",draft:!1,editUrl:"https://github.com/michalwols/kb/edit/master/docs/01-ml/label-noise.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"graphs",permalink:"/docs/ml/graphs"},next:{title:"LLMs (Large Language Models)",permalink:"/docs/ml/large-language-models"}},s={},c=[{value:"Robust Losses",id:"robust-losses",level:2},{value:"Curriculum Learning",id:"curriculum-learning",level:2},{value:"Noise Correction",id:"noise-correction",level:2},{value:"Early Stopping",id:"early-stopping",level:3}],u={toc:c};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"label-noise"},"Label Noise"),(0,o.kt)("h2",{id:"robust-losses"},"Robust Losses"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/2208.09884"},"DiscrimLoss: A Universal Loss for Hard Samples and Incorrect Samples Discrimination (2022-08-22)"))),(0,o.kt)("h2",{id:"curriculum-learning"},"Curriculum Learning"),(0,o.kt)("h2",{id:"noise-correction"},"Noise Correction"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/MrChenFeng/SSR_BMVC2022"},"GitHub - MrChenFeng/SSR_BMVC2022: SSR: An Efficient and Robust Framework for Learning with Unknown Label Noise")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Justherozen/ProMix"},"GitHub - Justherozen/ProMix: PyTorch Code for ProMix: Combating Label Noise via Maximizing Clean Sample Utility"))),(0,o.kt)("h3",{id:"early-stopping"},"Early Stopping"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/mahf93/tracking-memorization"},'GitHub - mahf93/tracking-memorization: Code for "Leveraging Unlabeled Data to Track Memorization"')))}p.isMDXComponent=!0}}]);